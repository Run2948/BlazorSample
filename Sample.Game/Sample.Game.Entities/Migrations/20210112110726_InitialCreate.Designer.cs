// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sample.Game.Entities;

namespace Sample.Game.Entities.Migrations
{
    [DbContext(typeof(GameDbContext))]
    [Migration("20210112110726_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Sample.Game.Entities.Models.Character", b =>
                {
                    b.Property<Guid>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Classes")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Nickname")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("char(36)");

                    b.HasKey("CharacterId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            CharacterId = new Guid("b845ff6a-770a-4ebb-971c-435c6a5ada1b"),
                            Classes = "Mage",
                            DateCreated = new DateTime(2021, 1, 12, 19, 7, 26, 475, DateTimeKind.Local).AddTicks(5981),
                            Level = 99,
                            Nickname = "Code Man",
                            PlayerId = new Guid("5b78c67b-9e09-48a1-88e9-b24eab8809ce")
                        },
                        new
                        {
                            CharacterId = new Guid("7174670a-84ef-4d2f-983b-f132dcaf38a3"),
                            Classes = "Warrior",
                            DateCreated = new DateTime(2021, 1, 12, 19, 7, 26, 475, DateTimeKind.Local).AddTicks(6279),
                            Level = 90,
                            Nickname = "Iron Man",
                            PlayerId = new Guid("5b78c67b-9e09-48a1-88e9-b24eab8809ce")
                        },
                        new
                        {
                            CharacterId = new Guid("9957e487-ff8e-4033-b4c9-038b86b0cdca"),
                            Classes = "Druid",
                            DateCreated = new DateTime(2021, 1, 12, 19, 7, 26, 475, DateTimeKind.Local).AddTicks(6283),
                            Level = 80,
                            Nickname = "Spider Man",
                            PlayerId = new Guid("5b78c67b-9e09-48a1-88e9-b24eab8809ce")
                        },
                        new
                        {
                            CharacterId = new Guid("be39e62d-b97c-455d-99a2-c441426a09cb"),
                            Classes = "Death Knight",
                            DateCreated = new DateTime(2021, 1, 12, 19, 7, 26, 475, DateTimeKind.Local).AddTicks(6285),
                            Level = 90,
                            Nickname = "Batman",
                            PlayerId = new Guid("05223341-774c-4ba0-9e29-4107f30c1819")
                        },
                        new
                        {
                            CharacterId = new Guid("78e39d8e-eb3a-4a7b-afcc-a27e28077092"),
                            Classes = "Paladin",
                            DateCreated = new DateTime(2021, 1, 12, 19, 7, 26, 475, DateTimeKind.Local).AddTicks(6301),
                            Level = 99,
                            Nickname = "Superman",
                            PlayerId = new Guid("05223341-774c-4ba0-9e29-4107f30c1819")
                        });
                });

            modelBuilder.Entity("Sample.Game.Entities.Models.Player", b =>
                {
                    b.Property<Guid>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Account")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4");

                    b.Property<string>("AccountType")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            PlayerId = new Guid("5b78c67b-9e09-48a1-88e9-b24eab8809ce"),
                            Account = "mw2021",
                            AccountType = "Free",
                            DateCreated = new DateTime(2021, 1, 12, 19, 7, 26, 474, DateTimeKind.Local).AddTicks(5302)
                        },
                        new
                        {
                            PlayerId = new Guid("05223341-774c-4ba0-9e29-4107f30c1819"),
                            Account = "dc2021",
                            AccountType = "Free",
                            DateCreated = new DateTime(2021, 1, 12, 19, 7, 26, 475, DateTimeKind.Local).AddTicks(4456)
                        });
                });

            modelBuilder.Entity("Sample.Game.Entities.Models.Character", b =>
                {
                    b.HasOne("Sample.Game.Entities.Models.Player", "Player")
                        .WithMany("Characters")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Sample.Game.Entities.Models.Player", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
